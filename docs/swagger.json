{
    "swagger": "2.0",
    "info": {
        "description": "Auth service",
        "title": "medods-test",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1/",
    "paths": {
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Выполняет выход пользователя, блокируя текущий токен доступа",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logout"
                ],
                "summary": "Выход пользователя из системы",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cваш_токен\u003e",
                        "description": "Токен доступа",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный выход из системы",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Не авторизован - Неверный или отсутствующий токен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера - Проблемы при выходе из системы",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "description": "Генерирует новую пару access и refresh токенов для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Создание новых токенов",
                "parameters": [
                    {
                        "description": "Данные для генерации токенов",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tokens.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set-Cookie: refreshToken={token}; Path=/; Domain=localhost; Max-Age={liveRefresh}; HttpOnly",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Невалидные входные данные",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/refresh-token": {
            "post": {
                "description": "Проверяет валидность access и refresh токенов, их соответствие, отсутствие в черном списке. Выдает новую пару токенов, добавляет старые в черный список и обновляет данные пользователя.\nRefresh token читается из cookie \"Cookie:refreshToken=\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Refresh tokens"
                ],
                "summary": "Обновление пары JWT токенов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access токен в формате 'Bearer \u003ctoken\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление токенов",
                        "schema": {
                            "$ref": "#/definitions/refresh.Response"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос (например, GUID уже существует)",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Неавторизован (невалидные токены, токены в черном списке и т.д.)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/guid": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает GUID пользователя из JWT токена",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Получение GUID пользователя",
                "responses": {
                    "200": {
                        "description": "Успешное получение GUID",
                        "schema": {
                            "$ref": "#/definitions/me.Response"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный запрос",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "me.Response": {
            "type": "object",
            "properties": {
                "guid": {
                    "type": "string"
                }
            }
        },
        "refresh.Response": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "response": {
                    "$ref": "#/definitions/response.Response"
                }
            }
        },
        "response.Response": {
            "description": "all respones based on this and can overwrite this",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "tokens.Request": {
            "type": "object",
            "required": [
                "guid"
            ],
            "properties": {
                "guid": {
                    "type": "string"
                }
            }
        },
        "tokens.Response": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "response": {
                    "$ref": "#/definitions/response.Response"
                }
            }
        }
    }
}